define ["jquery", "jquery.pjax"], ($) ->

	class App
		@controllers = [<%=
				dir = File.join(File.dirname(__FILE__), "controllers", "**", "*.coffee")
				paths = Dir[dir].map { |d| %Q("#{d.gsub(/^.*controllers\/([^\.]*).*?$/, 'controllers/\1')}") }
				paths.join(", ")
		%>]

		constructor: (@view) ->
		
		boot: ->
			@init_pjax()
			@watch_navigation()
		
		init_pjax: ->
			@view.find("a:not([data-remote]):not([data-method]):not([data-behavior]):not([data-skip-pjax])").pjax("[data-pjax-container]")
		
		watch_navigation: ->
			$(document).on("pjax:end", =>
				$("[data-controller]").each (i,el) =>
					@page_specifics($(el))
			).trigger("pjax:end")
			
		page_specifics: (view) ->
			# unless the view is already initialized
			unless view.data("controller-init")
				# mark as initialized
				view.data("controller-init", true)
				# calculate our controller key
				key = "controllers/#{view.data("controller")}_controller"
				# if we have a file for this controller
				if App.controllers.indexOf(key) >= 0
					# load the controller specific module
					require [key], (Controller) =>
						# initialize the controller with the view
						new Controller(view)